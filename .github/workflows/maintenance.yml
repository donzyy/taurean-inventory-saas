name: Maintenance

on:
  schedule:
    # Run every Monday at 2 AM UTC
    - cron: '0 2 * * 1'
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '18'

jobs:
  # Dependency Updates
  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Check for outdated dependencies
        run: |
          echo "📦 Checking for outdated dependencies..."
          
          cd backend
          echo "Backend dependencies:"
          npm outdated || echo "All backend dependencies are up to date"
          
          cd ../frontend
          echo "Frontend dependencies:"
          npm outdated || echo "All frontend dependencies are up to date"

      - name: Check for security vulnerabilities
        run: |
          echo "🔒 Checking for security vulnerabilities..."
          
          cd backend
          npm audit --audit-level=moderate || true
          
          cd ../frontend
          npm audit --audit-level=moderate || true

  # Build Verification
  build-verification:
    name: Build Verification
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Verify Backend Build
        run: |
          echo "🔧 Verifying Backend Build..."
          cd backend
          npm ci
          npm run build
          echo "✅ Backend build verified!"

      - name: Verify Frontend Build
        run: |
          echo "🔧 Verifying Frontend Build..."
          cd frontend
          npm ci
          npm run build
          echo "✅ Frontend build verified!"

  # Database Schema Check
  database-check:
    name: Database Schema Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Check Database Models
        run: |
          echo "🗄️ Checking Database Models..."
          cd backend
          npm ci
          
          # Check if all models compile correctly
          npx tsc --noEmit src/models/*.ts
          echo "✅ Database models verified!"

  # Email Template Check
  email-check:
    name: Email Template Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Verify Email Templates
        run: |
          echo "📧 Checking Email Templates..."
          cd backend
          npm ci
          
          # Check if React Email templates compile
          npx tsc --noEmit src/emails/**/*.tsx
          echo "✅ Email templates verified!"

  # Summary Report
  summary:
    name: Maintenance Summary
    runs-on: ubuntu-latest
    needs: [dependency-check, build-verification, database-check, email-check]
    if: always()

    steps:
      - name: Generate Summary Report
        run: |
          echo "📊 Maintenance Summary Report"
          echo "=============================="
          echo "Generated: $(date)"
          echo ""
          echo "Dependency Check: ${{ needs.dependency-check.result }}"
          echo "Build Verification: ${{ needs.build-verification.result }}"
          echo "Database Check: ${{ needs.database-check.result }}"
          echo "Email Template Check: ${{ needs.email-check.result }}"
          echo ""
          
          if [[ "${{ needs.build-verification.result }}" == "success" ]]; then
            echo "🎉 All systems operational!"
          else
            echo "⚠️ Some checks failed. Review the logs above."
          fi