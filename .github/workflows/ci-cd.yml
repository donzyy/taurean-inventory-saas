name: CI/CD Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  release:
    types: [published]

env:
  NODE_VERSION: "18"
  BACKEND_PORT: 3001
  FRONTEND_PORT: 3000

jobs:
  # Backend Build and Test
  backend:
    name: Backend Build & Test
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Backend Dependencies
        run: |
          cd backend
          npm i

      - name: Create Backend Environment File
        run: |
          cd backend
          cat > .env << EOF
          NODE_ENV=test
          MONGO_URI=mongodb://localhost:27017/taurean_test
          REDIS_URL=redis://localhost:6379
          ACCESS_TOKEN_SECRET=test_access_token_secret
          REFRESH_TOKEN_SECRET=test_refresh_token_secret
          PASSWORD_TOKEN_SECRET=test_password_token_secret
          EMAIL_TOKEN_SECRET=test_email_token_secret
          FRONTEND_BASE_URL=http://localhost:3000
          BACKEND_BASE_URL=http://localhost:3001
          PORT=3001
          EOF

      - name: Run Backend Linting
        run: |
          cd backend
          npm run lint

      - name: Build Backend
        run: |
          cd backend
          npm run build

      - name: Run Backend Tests
        run: |
          cd backend
          npm test
        continue-on-error: true

      - name: Upload Backend Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: backend/dist/
          retention-days: 7

  # Frontend Build and Test
  frontend:
    name: Frontend Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm i

      - name: Create Frontend Environment File
        run: |
          cd frontend
          cat > .env.local << EOF
          NEXT_PUBLIC_API_URL=http://localhost:3001
          EOF

      - name: Run Frontend Linting
        run: |
          cd frontend
          npm run lint

      - name: Build Frontend
        run: |
          cd frontend
          npm run build

      - name: Run Frontend Tests
        run: |
          cd frontend
          npm test
        continue-on-error: true

      - name: Upload Frontend Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/.next/
          retention-days: 7

  # Integration Tests
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [backend, frontend]

    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download Backend Artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: backend/dist/

      - name: Download Frontend Artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/.next/

      - name: Install Backend Dependencies
        run: |
          cd backend
          npm i --only=production

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm i --only=production

      - name: Create Test Environment Files
        run: |
          cd backend
          cat > .env << EOF
          NODE_ENV=test
          MONGO_URI=mongodb://localhost:27017/taurean_integration_test
          REDIS_URL=redis://localhost:6379
          ACCESS_TOKEN_SECRET=test_access_token_secret
          REFRESH_TOKEN_SECRET=test_refresh_token_secret
          PASSWORD_TOKEN_SECRET=test_password_token_secret
          EMAIL_TOKEN_SECRET=test_email_token_secret
          FRONTEND_BASE_URL=http://localhost:3000
          BACKEND_BASE_URL=http://localhost:3001
          PORT=3001
          EOF

      - name: Start Backend Server
        run: |
          cd backend
          npm start &
          sleep 10
        env:
          NODE_ENV: test

      - name: Run Integration Tests
        run: |
          cd frontend
          npm run test:e2e
        continue-on-error: true

  # Security Scan
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [backend, frontend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: |
          cd backend && npm i
          cd ../frontend && npm i
