name: Pull Request Check

on:
  pull_request:
    branches: [main, dev]

env:
  NODE_VERSION: "18"

jobs:
  # Quick Build Check
  build-check:
    name: Build Verification
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      # Backend Build Check
      - name: Backend Build Check
        run: |
          echo "üîß Checking Backend Build..."
          cd backend
          npm i
          npm run build
          echo "‚úÖ Backend build successful!"

      # Frontend Build Check
      - name: Frontend Build Check
        run: |
          echo "üîß Checking Frontend Build..."
          cd frontend
          npm i
          npm run build
          echo "‚úÖ Frontend build successful!"

      # Type Check
      - name: Type Check
        run: |
          echo "üîç Running Type Checks..."
          cd backend && npm run lint
          cd ../frontend && npm run lint
          echo "‚úÖ Type checks passed!"

  # Security Check
  security-check:
    name: Security Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Security Audit
        run: |
          echo "üîí Running Security Audit..."
          cd backend && npm audit --audit-level=moderate || true
          cd ../frontend && npm audit --audit-level=moderate || true
          echo "‚úÖ Security check completed!"

  # Code Quality
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Check Code Formatting
        run: |
          echo "üé® Checking Code Formatting..."
          cd backend && npm run lint || true
          cd ../frontend && npm run lint || true
          echo "‚úÖ Code quality check completed!"

  # Summary
  summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [build-check, security-check, code-quality]
    if: always()

    steps:
      - name: Build Status Summary
        run: |
          echo "Build Summary for PR #${{ github.event.number }}"
          echo "================================================"
          echo "Backend Build: ${{ needs.build-check.result }}"
          echo "Frontend Build: ${{ needs.build-check.result }}"
          echo "Security Check: ${{ needs.security-check.result }}"
          echo "Code Quality: ${{ needs.code-quality.result }}"

          if [[ "${{ needs.build-check.result }}" == "success" ]]; then
            echo "üéâ All builds successful! Ready for review."
          else
            echo "‚ùå Build failed. Please check the logs above."
            exit 1
          fi
